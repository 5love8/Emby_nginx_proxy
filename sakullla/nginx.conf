user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # 启用 HTTP/2 和 HTTP/3
    http2 on;
    http3 on;

    # QUIC 相关配置
    quic_gso on;
    quic_retry on;
    quic_active_connection_id_limit 10;
    http3_max_concurrent_streams 4096;
    http3_stream_buffer_size 100m;

    # 定义后端服务器
    upstream backend1 {
        server 127.0.0.1:8080;
    }

    upstream backend2 {
        server 127.0.0.1:8081;
    }

    # HTTP 重定向到 HTTPS
    server {
        listen 80;
        server_name example.com www.example.com example.net www.example.net;

        # 将所有 HTTP 请求重定向到 HTTPS
        return 301 https://$host$request_uri;
    }

    # HTTPS 配置 - example.com
    server {
        listen 443 ssl http2;  # 支持 HTTP/2
        listen 443 quic reuseport;  # 支持 HTTP/3 (QUIC)
        server_name example.com www.example.com;

        # SSL 证书路径
        ssl_certificate /etc/nginx/certs/example.com/cert;
        ssl_certificate_key /etc/nginx/certs/example.com/key;

        # SSL 配置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # 启用 HTTP/3
        add_header Alt-Svc 'h3=":443"; ma=86400';  # 告知客户端支持 HTTP/3

        # 反向代理到后端服务器
        location / {
            proxy_pass http://backend1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS 配置 - example.net
    server {
        listen 443 ssl http2;  # 支持 HTTP/2
        listen 443 quic reuseport;  # 支持 HTTP/3 (QUIC)
        server_name example.net www.example.net;

        # SSL 证书路径
        ssl_certificate /etc/nginx/certs/example.net/cert;
        ssl_certificate_key /etc/nginx/certs/example.net/key;

        # SSL 配置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # 启用 HTTP/3
        add_header Alt-Svc 'h3=":443"; ma=86400';  # 告知客户端支持 HTTP/3

        # 反向代理到后端服务器
        location / {
            proxy_pass http://backend2;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # 默认服务器（处理未匹配的请求）
    server {
        listen 80 default_server;
        listen 443 ssl default_server;

        server_name _;

        # SSL 证书路径（可选）
        ssl_certificate /etc/nginx/certs/default/cert;
        ssl_certificate_key /etc/nginx/certs/default/key;

        # 返回 404 或其他自定义响应
        return 404;
    }
}
